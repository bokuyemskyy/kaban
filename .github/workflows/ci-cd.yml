name: CI/CD

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  style:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/bokuyemskyy/kaban-ubuntu-base:latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - run: cmake --preset default -DCMAKE_BUILD_TYPE=Release
      - run: clang-format --dry-run --Werror $(find app -type f \( -name "*.cpp" -o -name "*.hpp" \) ! -path "*/generated/*")
      - run: clang-tidy -p build -header-filter='^/home/amon/Code/kaban/app/.*' $(find ./app -name '*.cpp' ! -path './app/interface/gui/stb_image_impl.cpp')

  safety:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/bokuyemskyy/kaban-ubuntu-base:latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - run: cmake --preset default -DCMAKE_BUILD_TYPE=Release
      - run: cppcheck --enable=all --project=build/compile_commands.json --error-exitcode=1 -i interface/gui/resources/generated --suppress=missingIncludeSystem  --check-level=exhaustive --disable=unusedFunction --suppress=variableScope --suppress=checkersReport
        
  tests:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/bokuyemskyy/kaban-ubuntu-base:latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - run: cmake --preset default -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON
      - run: cmake --build build
      - run: ctest --test-dir build/tests -R Perft.PerftMidset -V

  build:
    needs: [style, safety, tests]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/bokuyemskyy/kaban-ubuntu-base:latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - run: cmake --preset default -DCMAKE_BUILD_TYPE=Release
    - run: cmake --build build

    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: kaban-release
        path: ./build/app/Release/kaban

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: kaban-release
          path: ./build/app/Release/

      - name: Create release and upload asset
        uses: softprops/action-gh-release@v2
        with:
          files: ./build/app/Release/kaban 
          name: Release ${{ github.ref_name }}
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}